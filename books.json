{
  "swagger": "2.0",
  "info": {
    "description": "Books Cave API.  You can find out more about at [http://swagger.io](http://swagger.io) or on [https://github.com/codegoddesstosin]",
    "version": "1.0.0",
    "title": "Books Cave",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "77tosin@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "host": "localhost:8000",
  "basePath": "/api",
  "tags": [
    {
      "name": "Book",
      "description": "Everything about your book",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "Review",
      "description": "Operations on Book ratings "
    },
    {
      "name": "User",
      "description": "Users",
      "externalDocs": {
        "description": "Find out more about our store",
        "url": "http://swagger.io"
      }
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/books": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Get list of Books",
        "description": "This end point gets the list of all books",
        "operationId": "addbook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "responses": {
          "405": {
            "description": "Invalid input"
          }
        }
      },
      "put": {
        "tags": [
          "Book"
        ],
        "summary": "Update an existing book",
        "description": "this end point updates a book",
        "operationId": "updatebook",
        "consumes": [
          "application/json"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Book object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "book not found"
          },
          "405": {
            "description": "Validation exception"
          }
        }
      }
    },
    "/book/{id}": {
      "get": {
        "tags": [
          "Book"
        ],
        "summary": "Finds book by id",
        "description": "Multiple status values can be provided with comma separated strings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Unique Book ID",
            "required": true,
            "type": "integer"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/book": {
      "post": {
        "tags": [
          "Book"
        ],
        "summary": "Create Book",
        "description": "Multiple status values can be provided with comma separated strings",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Book object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "items": {
                "$ref": "#/definitions/Book"
              }
            }
          },
          "400": {
            "description": "Invalid status value"
          }
        }
      }
    },
    "/books/{id}": {
      "delete": {
        "tags": [
          "Book"
        ],
        "summary": "Deletes a book",
        "description": "",
        "operationId": "deletebook",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "400": {
            "description": "Invalid ID supplied"
          },
          "404": {
            "description": "Pet not found"
          }
        }
      }
    },
    "post": {
      "tags": [
        "Book"
      ],
      "summary": "Create a Book",
      "description": "",
      "consumes": [
        "application/x-www-form-urlencoded"
      ],
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "in": "body",
          "name": "body",
          "description": "Book object that needs to be added to the store",
          "required": true,
          "schema": {
            "$ref": "#/definitions/Book"
          }
        }
      ],
      "responses": {
        "405": {
          "description": "Invalid input"
        }
      }
    },
    "delete": {
      "tags": [
        "book"
      ],
      "summary": "Deletes a book",
      "description": "",
      "operationId": "deletebook",
      "produces": [
        "application/json"
      ],
      "parameters": [
        {
          "name": "id",
          "in": "path",
          "required": true,
          "type": "string"
        }
      ],
      "responses": {
        "400": {
          "description": "Invalid ID supplied"
        },
        "404": {
          "description": "book not found"
        }
      }
    },
    "/review": {
      "post": {
        "tags": [
          "Review"
        ],
        "summary": "Create book review",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Book object that needs to be added to the store",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Book"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reviews": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Get all book reviews",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/review/{id}": {
      "get": {
        "tags": [
          "Review"
        ],
        "summary": "Show individual book ratings",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "description": "Get all book reviews",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/reviews/{id}": {
      "delete": {
        "tags": [
          "Review"
        ],
        "summary": "Delete book reviews",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    },
    "/user": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Create user",
        "description": "This can only be done by the logged in user.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "successful operation"
          }
        }
      }
    }
  },
  "definitions": {
    "Book": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "ISBN": {
          "type": "string"
        }
      }
    },
    "User": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      },
      "xml": {
        "name": "User"
      }
    },
    "Review": {
      "type": "object",
      "properties": {
        "id": {
          "type": "integer"
        },
        "book_id": {
          "type": "integer"
        },
        "user_id": {
          "type": "integer"
        },
        "rating": {
          "type": "integer"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "ApiResponse": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  }
}